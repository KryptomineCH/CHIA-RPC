using CHIA_RPC.FullNode_NS;
using CHIA_RPC_Tests.Testhelpers;

namespace CHIA_RPC_Tests.FullNode_NS.Simulator_NS
{
    public class Test_GetAllBlocks
    {
        private string[] ExpectedResults = new string[]
        {
            "{\r\n    \"blocks\": [\r\n        {\r\n            \"challenge_chain_ip_proof\": {\r\n                \"normalized_to_identity\": false,\r\n                \"witness\": \"0x04000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n                \"witness_type\": 0\r\n            },\r\n            \"challenge_chain_sp_proof\": {\r\n                \"normalized_to_identity\": false,\r\n                \"witness\": \"0x02004c00010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n                \"witness_type\": 0\r\n            },\r\n            \"finished_sub_slots\":\r\n                {\r\n                    \"challenge_chain\": {\r\n                        \"challenge_chain_end_of_slot_vdf\": {\r\n                            \"challenge\": \"0xeb8c4d20b322be8d9fddbf9412016bdffe9a2901d7edb0e364e94266d0e095f7\",\r\n                            \"number_of_iterations\": 1024,\r\n                            \"output\": {\r\n                                \"data\": \"0x00006100050100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\r\n                            }\r\n                        },\r\n                        \"infused_challenge_chain_sub_slot_hash\": null,\r\n                        \"new_difficulty\": null,\r\n                        \"new_sub_slot_iters\": null,\r\n                        \"subepoch_summary_hash\": null\r\n                    },\r\n                    \"infused_challenge_chain\": null,\r\n                    \"proofs\": {\r\n                        \"challenge_chain_slot_proof\": {\r\n                            \"normalized_to_identity\": false,\r\n                            \"witness\": \"0x00003d00020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n                            \"witness_type\": 0\r\n                        },\r\n                        \"infused_challenge_chain_slot_proof\": null,\r\n                        \"reward_chain_slot_proof\": {\r\n                            \"normalized_to_identity\": false,\r\n                            \"witness\": \"0x00003d00020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\r\n                            \"witness_type\": 0\r\n                        }\r\n                    },\r\n                    \"reward_chain\": {\r\n                        \"challenge_chain_sub_slot_hash\": \"0xe44e06ed13eb06c7c2f0218945b7c62e785d6482c27ebbe69aab499ae199258c\",\r\n                        \"deficit\": 12,\r\n                        \"end_of_slot_vdf\": {\r\n                            \"challenge\": \"0xeb8c4d20b322be8d9fddbf9412016bdffe9a2901d7edb0e364e94266d0e095f7\",\r\n                            \"number_of_iterations\": 1024,\r\n                            \"output\": {\r\n                                \"data\": \"0x00006100050100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\r\n                            }\r\n                        },\r\n                        \"infused_challenge_chain_sub_slot_hash\": null\r\n                    }\r\n                },\r\n                \"reward_claims_incorporated\": [\r\n                    {\r\n                        \"amount\": 1750000000000,\r\n                        \"parent_coin_info\": \"0xeb8c4d20b322be8d9fddbf9412016bdf00000000000000000000000000000011\",\r\n                        \"puzzle_hash\": \"0x5fb3e0ccc23760a7f917a81e7872cc921f9ddbc86582dfb4f64eee66fad5e740\"\r\n                    },\r\n                    {\r\n                        \"amount\": 250000000000,\r\n                        \"parent_coin_info\": \"0xfe9a2901d7edb0e364e94266d0e095f700000000000000000000000000000011\",\r\n                        \"puzzle_hash\": \"0x5fb3e0ccc23760a7f917a81e7872cc921f9ddbc86582dfb4f64eee66fad5e740\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"success\": true\r\n}"
        };
        [Fact]
        public void Test_ResponseSerialisation()
        {
            Test_ResponseClasses<GetBlocks_Response> helper = new Test_ResponseClasses<GetBlocks_Response>();
            helper.Test_Serialisation(ExpectedResults);
        }
        [Fact]
        public void Test_ResponseDiskIO()
        {
            Test_ResponseClasses<GetBlocks_Response> helper = new Test_ResponseClasses<GetBlocks_Response>();
            helper.Test_DiskIO(ExpectedResults);
        }
    }
}
